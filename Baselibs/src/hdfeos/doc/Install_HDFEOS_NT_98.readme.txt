#-----------------------------------------------------------------------------
# filename:
#       Install_Nt_98.README
#
# description:
#       Installation instruction for HDFEOS2.13 on Windows NT and 
#	Windows 95/98
#       
# author:
#       Subing Zeng/ Raytheon STX Corp.
#       Phuong Nguyen/ L3 Communication, GSI.
#
# history:
#       2-Aug-1999 Second version
#       11-OCT-1999 Third version( with Fortran support)
#	06-Jul-2005 Version 2.13
#-----------------------------------------------------------------------------
              
The instructions which follow assume that you will be using
the 'zip' files that we provide: hdfeos2.13b.zip (binary file 
for Windows 98/NT) and hdfeos2.13.zip (source code file). 



Building from Binary Code Release (hdfeos2.13b.zip)
===============================================
To install the HDFEOS with the prebuilt libraries, it is assumed that 
you have done the following:      

      NOTE: THE FOLLOWING INTSTRUTIONS SHOULD BE FINE FOR BOTH WINNT AND WIN98

      1. Go to the website edhs1.gsfc.nasa.gov, under directory 
	 hdfeos/window you can download: hdfeos2.13b.zip.

      2. On you window, create a directory structure to unpack the 
	 source file. For example: 
	    c:\					(any drive)
           	MyHDFEOS\		       	(any folder name)
        

      3. Copy the hdfeos2.13b.zip to that directory 
         and unpack it by running WinZip on it.
         This should create the following directories: hdfeos, 
	 jpeg, Zlib-1.1.3, and szip1.2

	 The libraries and include files for hdfeos2.13 are inside:
            c:\MyHDFEOS\hdfeos\lib\NT_98    ( Release versions of hdfeos 
					      and gctp libraries
					    (hdfeos.lib, gctp.lib))
	
            c:\MyHDFEOS\hdfeos\include      ( HDFEOS include files )   
	 Inside the directories Zlib-1.1.3, jpeg and szip1.2
	 You can find their include files and libraries (zlib.lib, libjpeg.lib 
	 and szlib.lib).

      4. If you are building an application that uses the HDFEOS library,
         you must already have installed NSCA HDF (curren version that 
	 we're using is 4.2r0) on your machine. 
         
         Assumed you have installed HDF4.2r0 on 
            
            C:\MyHDF\HDF4.2r0\

         To specify the header files and linking in the HDFEOS libraries:
	 Select Tools->Options->Directories->"Show directories for"->
	 "Include files", add the following directories:
	    F:\Program Files\ArrayVisualizer\INCLUDE
            F:\Program Files\Microsoft Visual Studio\VC98\MFC\Include                   
            F:\Program Files\Microsoft Visual Studio\VC98\INCLUDE
            C:\MyHDFEOS\jpeg
	    C:\MyHDFEOS\Zlib-1.1.3\include
	    C:\MyHDFEOS\szip1.2\include
            C:\MyHDF\HDF4.2r0\include
            C:\MyHDFEOS\hdfeos\include
	    C:\MyHDFEOS\hdfeos\gctp\include

	Select Tools->Options->Directories->"Show directories for"->
	"Libraries files", add the following directories:
	    F:\Program Files\ArrayVisualizer\LIB
	    F:\Program Files\Microsoft Visual Studio\VC98\LIB
	    F:\Program Files\Microsoft Visual Studio\VC98\MFC\Lib
            C:\MyHDFEOS\jpeg
	    C:\MyHDFEOS\Zlib-1.1.3\lib
	    C:\MyHDFEOS\szip1.2\lib
            C:\MyHDF\HDF4.2r0\lib
            C:\MyHDFEOS\hdfeos\lib\NT_98
	NOTE: Please see Compile_NT_98.readme.txt inside hdfeos/doc
	      for more details.


Building from Source Code Release (hdfeos2.13.zip)
===============================================

STEP I:  Preconditions

To build the HDFEOS, it is assumed that you have done the following:
      
      1. Installed MicroSoft Developer Studio and Visual C++ 5.0.
    
      2. Installed jpeg, szip and zlib (see install_jpeg_zlib_szip.txt)
         
      3. Installed NSCA HDF version4.2 release 0.

      4. Set up a directory structure to unpack the library. For 
      example: 

	    c:\				(any drive)
           MyHDFEOS\			(any folder name)

      5. Copy the source distribution archive to that directory 
      and unpack it using the appropriate archiver options to create a 
      directory hierarchy.
         
      Run WinZip on hdfeos2.13.zip (the entire source tree).
      This should create a directory called 'hdfeos_dev' which 
      contains several files and directories for WIn95/98 and NT, a 
      directory called 'hdfeos' which contains the hdfeos package.

STEP II: Build HDFEOS library

INSTRUCTIONS FOR INSTALLATION           

         1. Open  c:\myHDFEOS\hdfeos_dev\hdfeos.dsw to begin building the 
            Developer Studio project.
         
         2. Select Tools->Options->Directories->"Show directories for"->
	    "Include files", add the following directories:

	    	F:\Program Files\ArrayVisualizer\INCLUDE
            	F:\Program Files\Microsoft Visual Studio\VC98\MFC\Include                   
            	F:\Program Files\Microsoft Visual Studio\VC98\INCLUDE
	        C:<path to jpeg>\jpeg  
		C:<path to zlib>\include
		C:<path to szlib>\include      
                C:<path to HDF>\include 
                C:<path to HDFEOS>\include 
	        C:<path to HDFEOS>\gctp\include

	 3. Select Tools->Options->Directories->"Show directories for"->
	    "Libraries files", add the following directories:
	  	C:\Program Files\ArrayVisualizer\LIB
                C:\Program Files\Microsoft Visual Studio\VC98\LIB
                C:\Program Files\Microsoft Visual Studio\VC98\MFC\LIB
	        C:<path to jpeg lib>\jpeg  
		C:<path to zlib>\lib
		C:<path to szlib>\lib
		C:<path to HDF>\lib

	    where <path to HDF> may be C:\myHDF\HDF4.2r0          
            where <path to HDFEOS> may be C:\myHDFEOS\hdfeos\

	4. Select Project->Settings, select forder, C/C++
   	   Add the following to "Preprocessor definitions": 
   	   VISUAL_CPLUSPLUS, INTEL86	 

	5. Select "Build", then Select "Set Active Configuration".
            Select "hdfeos - Win32Debug" as active configuration.
            Select "Build" and "Build hdfeosd.lib" to
            build the Debug version of the hdfeos tree.

	6. Select "Build", then Select "Set Active Configuration".
            Select "hdfeos - Win32Release" as active configuration.
            Select "Build" and "Build hdfeos.lib" to
            build the Release version of the hdfeos tree.

 	7. Select "Build", then Select "Set Active Configuration".
            Select "gctp - Win32Debug" as active configuration.
	    Select "Build" and "Build gctpd.lib" to
            build the Debug version of the gctp tree.

	8. Select "Build", then Select "Set Active Configuration".
            Select "gctp - Win32Release" as active configuration.
	    Select "Build" and "Build gctp.lib" to
            build the Release version of the gctp tree.

        9. In command prompt window run the installation batch commands
            win32ins.bat in directory C:\myHDFEOS\hdfeos_dev. These commands 
	    will copy *.lib files to C:\MyHDFEOS\hdfeos\lib\NT_98 
	    and remove some temporary files.

        10. If you are building an application that uses the HDFEOS library,
            Please refer to the <HDFEOS directory>\hdfeos_dev\compile_NT_98.txt 
            file for more information on compiling an application with the 
	    HDFEOS libraries on Windows 95/98 and Window NT.

MORE HELPFUL POINTERS
=====================

Here are some notes that may be of help is you are not familiar
with using the Visual C++ Development Environment.

Project name and location issues: 
         The files in hdfeos.dsw must end up in the hdfeos_dev\ directory

         If you must install hdfeos.dsw in another directory, relative to 
	 hdfeos_dev\ , you will be asked to locate the hdfeos and gctp project files, 
	 when you open the project hdfeos.dsw.

Settings... details:
  If you create your own project, the necessary settings can be
  read from the hdfeos.dsw file(as text), or from the
  Project Settings in the Developer Studio project settings 
dialog.

    Project
	  Settings
	      C/C++
		  Category
		     PreProcessor
			 Code Generation
			    Use run-time Library
				   These are all set to use Single-Threaded.
				   or Single-Threaded debug.




