<?xml version="1.0" encoding="UTF-8"?>
<!-- This schema is a type/element repository for all elements defined in the ECS Metadata model  The   -->
<!-- definitions are used in ESDT Specific schemas that are automatically generated based on the        -->
<!-- descriptor XML file.  The descriptor XML file is used to modify the element cardinality in complex -->
<!-- type definitions based on the value of the MANDATORY attribute.  The special cases when the        -->
<!-- attribute MANDATORY VALUE can be overwritten and become optional can be configured at schema        -->
<!-- generation time.                                                                                   -->
<!--****************************************************************************************************-->
<!-- Subsequent modifications to the schema MUST be described in comments below this line.              -->
<!--****************************************************************************************************-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:include schemaLocation="InventoryTypes.xsd"/>
	<xs:element name="DTDVersion">
		<xs:simpleType>
			<xs:restriction base="xs:float"/>
		</xs:simpleType>
	</xs:element>
	<xs:simpleType name="GranuleIDType">
		<xs:annotation>
			<xs:documentation>This is a generic type used to uniquely identify granules.  For NON ECS granules, the ID is generated by the data provider and will be stored in the DPL inventory for future reference.  For ECS granules, the ID is used to indicate the LocalGranuleID, which is a possible way for the instrument team to refer to the granule.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="80"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="GranuleURType">
		<xs:annotation>
			<xs:documentation>This is a generic type used to uniquely identify granule URs.  The Sybase ID can hold up 16 length numeric string, so the granule UR can be up to 89 length.  An Browse UR example,  UR:10:DsShESDTUR:UR:15:DsShSciServerUR:13:[NSC:DSSDSRV]:10:BR:Browse.001:1234567890123456</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="90"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="DataCenterId">
		<xs:annotation>
			<xs:documentation>Id of the site that provided the granule.</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<!-- specific Date Time elements will extend this type and use custom validators -->
	<!-- to enforce their specific formatting rules -->
	<xs:simpleType name="ECSDateTime">
		<xs:annotation>
			<xs:documentation>The formats we support are: YYYY-MM-DDTHH:MM:SS.sssssssZ or YYYY-DDDTHH:MM:SS.sssssssZ or YYYY-MM-DD hh:MM:SS.s.  The number of precision digits is optional.  It can go up to 7 digits.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="28"/>
			<xs:minLength value="8"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="CollectionMetaData">
		<xs:annotation>
			<xs:documentation>ECS collection to which the granule belongs.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ShortName"/>
				<xs:element ref="VersionID"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ShortName">
		<xs:annotation>
			<xs:documentation> ESDT Collection Name.</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="8"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="VersionID">
		<xs:annotation>
			<xs:documentation> ESDT Collection Version.</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:short">
				<xs:minInclusive value="0"/>
				<xs:maxInclusive value="255"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="LocalGranuleID" type="GranuleIDType"/>
	<xs:annotation>
		<xs:documentation>Unique identifier for locally ECS produced granule.  It can also identify NON ECS granules.</xs:documentation>
	</xs:annotation>
	<xs:element name="ReprocessingActual" type="ReprocessingActualType">
		<xs:annotation>
			<xs:documentation>Granule level metadata stating what reprocessing has been performed on this granule.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ReprocessingPlanned" type="ReprocessingPlannedType">
		<xs:annotation>
			<xs:documentation>Granule level metadata stating what reprocessing may be performed on this granule.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DayNightFlag" type="DayNightFlagType">
		<xs:annotation>
			<xs:documentation>Identify a granule was collected during the day, night (between sunset and sunrise) or both.  Note: "NA", "D" and "N" are valid in ECS but are already mapped to values enforced by this schema.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<!-- Supported format enforced by the custom validator is: YYYY-MM-DDTHH:MM:SS or YYYY-DDDTHH:MM:SS or YYYY-MM-DD' 'HH:MM:SS -->
	<xs:element name="ProductionDateTime" type="ECSDateTime">
		<xs:annotation>
			<xs:documentation>The date and time a specific granule was produced by a PGE.  Sample format is: 2002-12-31 23:59:59.0</xs:documentation>
			<xs:appinfo>xmlsvcs.validation.EcAmXvuDateValidator</xs:appinfo>
		</xs:annotation>
	</xs:element>
	<xs:element name="LocalVersionID">
		<xs:annotation>
			<xs:documentation>Identifier for PGE defined granule versions.</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="80"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="PGEVersionClass">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="PGEVersion"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="PGEVersion">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="10"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<!-- Supported format enforced by the custom validator is: YYYY-MM-DD or YYYY-DDD -->
	<xs:element name="RangeBeginningDate" type="ECSDateTime">
		<xs:annotation>
			<xs:documentation>The year (and optionally month, or month and day) when the temporal coverage period being described began.</xs:documentation>
			<xs:appinfo>xmlsvcs.validation.EcAmXvuDateValidator</xs:appinfo>
		</xs:annotation>
	</xs:element>
	<!-- Supported format enforced by the custom validator is: HH:MM:SS -->
	<xs:element name="RangeBeginningTime" type="xs:time">
		<xs:annotation>
			<xs:documentation>The first hour (and optionally minute, or minute and second) of the temporal coverage period being described formatted as 12:00:00.000000, i.e. minute and second are not optional.</xs:documentation>
			<xs:appinfo>xmlsvcs.validation.EcAmXvuDateValidator</xs:appinfo>
		</xs:annotation>
	</xs:element>
	<xs:element name="RangeDateTime">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="RangeEndingTime"/>
				<xs:element ref="RangeEndingDate"/>
				<xs:element ref="RangeBeginningTime"/>
				<xs:element ref="RangeBeginningDate"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!-- Supported format enforced by the custom validator is: YYYY-MM-DD or YYYY-DDD -->
	<xs:element name="RangeEndingDate" type="ECSDateTime">
		<xs:annotation>
			<xs:appinfo>xmlsvcs.validation.EcAmXvuDateValidator</xs:appinfo>
		</xs:annotation>
	</xs:element>
	<!-- Supported format enforced by the custom validator is: HH:MM:SS -->
	<xs:element name="RangeEndingTime" type="xs:time">
		<xs:annotation>
			<xs:appinfo>xmlsvcs.validation.EcAmXvuDateValidator</xs:appinfo>
		</xs:annotation>
	</xs:element>
	<xs:element name="SingleDateTime">
		<xs:annotation>
			<xs:documentation>Provides the means for encoding a single date and time for a granule occurring at that time or during the period covered by the time.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="TimeofDay"/>
				<xs:element ref="CalendarDate"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!-- Supported format enforced by the custom validator is: HH:MM:SS -->
	<xs:element name="TimeofDay" type="xs:time">
		<xs:annotation>
			<xs:appinfo>xmlsvcs.validation.EcAmXvuDateValidator</xs:appinfo>
		</xs:annotation>
	</xs:element>
	<!-- Supported format enforced by the custom validator is: YYYY-MM-DD or YYYY-DDD -->
	<xs:element name="CalendarDate" type="ECSDateTime">
		<xs:annotation>
			<xs:appinfo>xmlsvcs.validation.EcAmXvuDateValidator</xs:appinfo>
		</xs:annotation>
	</xs:element>
	<xs:element name="SpatialDomainContainer">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="GranuleLocality" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="VerticalSpatialDomain" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="HorizontalSpatialDomainContainer" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GranuleLocality">
		<xs:annotation>
			<xs:documentation>Contains the value for the granules locality.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="LocalityValue"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="LocalityValue" type="LocalityValueType">
		<xs:annotation>
			<xs:documentation>Provides means to indicate the granule locality.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="VerticalSpatialDomain">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="VerticalSpatialDomainContainer"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="VerticalSpatialDomainContainer">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="VerticalSpatialDomainType"/>
				<xs:element ref="VerticalSpatialDomainValue"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="VerticalSpatialDomainType" type="VerticalSpatialDomainTypeType"/>
	<xs:element name="VerticalSpatialDomainValue">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="HorizontalSpatialDomainContainer">
		<xs:annotation>
			<xs:appinfo>xmlsvcs.validation.EcAmXvuSpatialGeometryValidator</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ZoneIdentifierClass" minOccurs="0"/>
				<xs:choice>
					<xs:element ref="Point"/>
					<xs:element ref="Circle"/>
					<xs:element ref="BoundingRectangle"/>
					<xs:element ref="GPolygon"/>
					<!-- 7.21 change -->
					<xs:element ref="Global"/>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ZoneIdentifierClass">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ZoneIdentifier"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ZoneIdentifier" type="ZoneIdentifierType">
		<xs:annotation>
			<xs:documentation>The appropriate numeric or alpha code used to identify the various zones in this grid coordinate system.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Point">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="PointLongitude"/>
				<xs:element ref="PointLatitude"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="PointLatitude">
		<xs:annotation>
			<xs:documentation>decimal degrees (+ = north (default), - = south)</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:float">
				<xs:minInclusive value="-90.0000"/>
				<xs:maxInclusive value="+90.0000"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="PointLongitude">
		<xs:annotation>
			<xs:documentation>decimal degrees (+ = east (default), - = west)</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:float">
				<xs:minInclusive value="-180.0000"/>
				<xs:maxInclusive value="+180.0000"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="Circle">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="CenterLatitude"/>
				<xs:element ref="CenterLongitude"/>
				<xs:element ref="Radius"/>
				<xs:element ref="RadiusUnits" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="CenterLatitude">
		<xs:annotation>
			<xs:documentation>decimal degrees (+ = north (default), - = south)</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:float">
				<xs:minInclusive value="-90.0000"/>
				<xs:maxInclusive value="+90.0000"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="CenterLongitude">
		<xs:annotation>
			<xs:documentation>decimal degrees (+ = east (default), - = west)</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:float">
				<xs:minInclusive value="-180.0000"/>
				<xs:maxInclusive value="+180.0000"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="Radius" type="xs:float">
		<xs:annotation>
			<xs:documentation>The actual radius float value </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="RadiusUnits">
		<xs:annotation>
			<xs:documentation>Can be specified in meters (default), m (miles), km, ft, nm (nautical miles).</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="10"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="BoundingRectangle">
		<xs:annotation>
			<xs:documentation>llbox is defined by a LOWER_LEFT lat long and an UPPER_RIGHT lat long. Note: Original DTD defined it as west-north-east-south.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="WestBoundingCoordinate"/>
				<xs:element ref="NorthBoundingCoordinate"/>
				<xs:element ref="EastBoundingCoordinate"/>
				<xs:element ref="SouthBoundingCoordinate"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="SouthBoundingCoordinate">
		<xs:annotation>
			<xs:documentation>decimal degrees (+ = north (default), - = south)</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:float">
				<xs:minInclusive value="-90.0000"/>
				<xs:maxInclusive value="+90.0000"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="WestBoundingCoordinate">
		<xs:annotation>
			<xs:documentation>decimal degrees (+ = east (default), - = west)</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:float">
				<xs:minInclusive value="-180.0000"/>
				<xs:maxInclusive value="+180.0000"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="NorthBoundingCoordinate">
		<xs:annotation>
			<xs:documentation>decimal degrees (+ = north (default), - = south)</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:float">
				<xs:minInclusive value="-90.0000"/>
				<xs:maxInclusive value="+90.0000"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="EastBoundingCoordinate">
		<xs:annotation>
			<xs:documentation>decimal degrees (+ = east (default), - = west)</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:float">
				<xs:minInclusive value="-180.0000"/>
				<xs:maxInclusive value="+180.0000"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="GPolygon">
		<xs:annotation>
			<xs:documentation>Consists of an unlimited number of boundaries, each boundary represented by a sequence of points.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence maxOccurs="unbounded">
				<xs:element ref="Boundary"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Boundary">
		<xs:annotation>
			<xs:documentation>It is an actual polygon</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Point" minOccurs="3" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="OrbitCalculatedSpatialDomain">
		<xs:complexType>
			<xs:sequence maxOccurs="unbounded">
				<xs:element ref="OrbitCalculatedSpatialDomainContainer"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="OrbitCalculatedSpatialDomainContainer">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="OrbitalModelName" minOccurs="0"/>
				<xs:sequence>
					<xs:element ref="OrbitNumber" minOccurs="0"/>
					<!-- 7.21 change -->
					<xs:element ref="OrbitRange" minOccurs="0"/>
				</xs:sequence>
				<xs:element ref="EquatorCrossingLongitude"/>
				<xs:element ref="EquatorCrossingDate"/>
				<xs:element ref="EquatorCrossingTime"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="OrbitalModelName">
		<xs:annotation>
			<xs:documentation>Reference to the orbital model to be used to calculate the geolocation of this data.</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="80"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="OrbitNumber" type="xs:unsignedLong"/>
	<xs:annotation>
		<xs:documentation> The orbit number to be used in calculating the spatial extent of this data.</xs:documentation>
	</xs:annotation>
	<xs:element name="OrbitRange">
		<xs:complexType>
			<xs:sequence>
					<xs:element ref="StartOrbitNumber"/>
					<xs:element ref="StopOrbitNumber"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="StartOrbitNumber" type="xs:unsignedLong"/>
	<xs:element name="StopOrbitNumber" type="xs:unsignedLong"/>
	<xs:element name="EquatorCrossingLongitude">
		<xs:simpleType>
			<xs:restriction base="xs:float">
				<xs:minInclusive value="-180.0000"/>
				<xs:maxInclusive value="+180.0000"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<!-- Supported format enforced by the custom validator is: YYYY-MM-DD or YYYY-DDD -->
	<xs:element name="EquatorCrossingDate" type="ECSDateTime">
		<xs:annotation>
			<xs:appinfo>xmlsvcs.validation.EcAmXvuDateValidator</xs:appinfo>
		</xs:annotation>
	</xs:element>
	<!-- Supported format enforced by the custom validator is: HH:MM:SS -->
	<xs:element name="EquatorCrossingTime" type="xs:time">
		<xs:annotation>
			<xs:appinfo>xmlsvcs.validation.EcAmXvuDateValidator</xs:appinfo>
		</xs:annotation>
	</xs:element>
	<xs:element name="MeasuredParameter">
		<xs:complexType>
			<xs:sequence maxOccurs="unbounded">
				<xs:element ref="MeasuredParameterContainer"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="MeasuredParameterContainer">
		<xs:annotation>
			<xs:documentation>The measured parameter only requires a ParameterName, no QAStats or QAFlags.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ParameterName"/>
				<xs:element ref="QAStats" minOccurs="0"/>
				<xs:element ref="QAFlags" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ParameterName">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="80"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="QAStats">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="QAPercentMissingData" minOccurs="0"/>
				<xs:element ref="QAPercentOutofBoundsData" minOccurs="0"/>
				<xs:element ref="QAPercentInterpolatedData" minOccurs="0"/>
				<xs:element ref="QAPercentCloudCover" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="QAPercentCloudCoverType">
		<xs:annotation>
			<xs:documentation>Cloud cover value for the current granule, expressed as a percentage.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:short">
			<xs:minInclusive value="0"/>
			<xs:maxInclusive value="100"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="QAPercentCloudCover" type="QAPercentCloudCoverType"/>
	<xs:simpleType name="QAPercentInterpolatedDataType">
		<xs:annotation>
			<xs:documentation>Percentage of granule interpolated data.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:short">
			<xs:minInclusive value="0"/>
			<xs:maxInclusive value="100"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="QAPercentInterpolatedData" type="QAPercentInterpolatedDataType"/>
	<xs:simpleType name="QAPercentMissingDataType">
		<xs:annotation>
			<xs:documentation>Percentage of granule missing data.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:short">
			<xs:minInclusive value="0"/>
			<xs:maxInclusive value="100"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="QAPercentMissingData" type="QAPercentMissingDataType"/>
	<xs:simpleType name="QAPercentOutofBoundsDataType">
		<xs:annotation>
			<xs:documentation>Percentage of data out of bounds for granule.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:short">
			<xs:minInclusive value="0"/>
			<xs:maxInclusive value="100"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="QAPercentOutofBoundsData" type="QAPercentOutofBoundsDataType"/>
	<xs:element name="QAFlags">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="AutomaticQualityFlag" minOccurs="0"/>
				<xs:element ref="AutomaticQualityFlagExplanation" minOccurs="0"/>
				<xs:element ref="OperationalQualityFlag" minOccurs="0"/>
				<xs:element ref="OperationalQualityFlagExplanation" minOccurs="0"/>
				<xs:element ref="ScienceQualityFlag" minOccurs="0"/>
				<xs:element ref="ScienceQualityFlagExplanation" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="AutomaticQualityFlag" type="AutomaticQualityFlagType"/>
	<xs:annotation>
		<xs:documentation>The granule level flag applying generally to the granule and specifically to parameters the granule level.</xs:documentation>
	</xs:annotation>
	<xs:element name="AutomaticQualityFlagExplanation">
		<xs:annotation>
			<xs:documentation>A text explanation of the criteria used to set automatic quality flag; including thresholds or other criteria.</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="255"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="OperationalQualityFlag" type="OperationalQualityFlagType"/>
	<xs:element name="OperationalQualityFlagExplanation">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="255"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="ScienceQualityFlag" type="ScienceQualityFlagType"/>
	<xs:element name="ScienceQualityFlagExplanation">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="255"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="ProcessingQA">
		<xs:complexType>
			<xs:sequence maxOccurs="unbounded">
				<xs:element ref="ProcessingQAContainer"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ProcessingQAContainer">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ProcessingQADescription"/>
				<xs:element ref="ProcessingQAAttribute"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ProcessingQADescription">
		<xs:annotation>
			<xs:documentation>Provides description of the error encountered during processing for the specified Processing QA Attribute.</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="255"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="ProcessingQAAttribute" type="ProcessingQAAttributeType">
		<xs:annotation>
			<xs:documentation>Identifies the non-science QA attribute which did not meet pre-defined parameter thresholds during val-idation processing.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="StorageMediumClass">
		<xs:complexType>
			<xs:sequence maxOccurs="unbounded">
				<xs:element ref="StorageMedium"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="StorageMedium" type="StorageMediumType">
		<xs:annotation>
			<xs:documentation>The quantity and type of medium on which the distributed data are stored.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Review">
		<xs:complexType>
			<xs:sequence maxOccurs="unbounded">
				<xs:element ref="ReviewContainer"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ReviewContainer">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ScienceReviewStatus"/>
				<xs:element ref="ScienceReviewDate"/>
				<xs:element ref="FutureReviewDate" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!-- Supported format enforced by the custom validator is: YYYY-MM-DD or YYYY-DDD -->
	<xs:element name="ScienceReviewDate" type="ECSDateTime">
		<xs:annotation>
			<xs:appinfo>xmlsvcs.validation.EcAmXvuDateValidator</xs:appinfo>
		</xs:annotation>
	</xs:element>
	<xs:element name="ScienceReviewStatus" type="ScienceReviewStatusType"/>
	<!-- Supported format enforced by the custom validator is: YYYY-MM-DD or YYYY-DDD -->
	<xs:element name="FutureReviewDate" type="ECSDateTime">
		<xs:annotation>
			<xs:appinfo>xmlsvcs.validation.EcAmXvuDateValidator</xs:appinfo>
		</xs:annotation>
	</xs:element>
	<xs:element name="Platform">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="PlatformShortName"/>
				<xs:element ref="Instrument" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="PlatformShortName" type="PlatformShortNameType"/>
	<xs:element name="Instrument">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="InstrumentShortName"/>
				<xs:element ref="Sensor" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="OperationMode" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="InstrumentShortName" type="InstrumentShortNameType"/>
	<xs:element name="Sensor">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="SensorShortName"/>
				<xs:element ref="SensorCharacteristic" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="SensorShortName" type="SensorShortNameType"/>
	<xs:element name="SensorCharacteristic">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="SensorCharacteristicName"/>
				<xs:element ref="SensorCharacteristicValue"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="SensorCharacteristicName">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="40"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="SensorCharacteristicValue">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="80"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="OperationMode" type="OperationModeType"/>
	<xs:element name="AnalysisSource">
		<xs:annotation>
			<xs:documentation>
				Used to describe the data acquisition or data processing processes.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="AnalysisShortName"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="AnalysisShortName">
		<xs:annotation>
			<xs:documentation>
				AnalysisShortName is the unique identifier of the collection or analysis process.
			</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="Campaign">
		<xs:annotation>
			<xs:documentation>
				Contains attributes describing the scientific endeavor(s) to which the collection is associated.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="CampaignShortName"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="CampaignShortName" type="CampaignShortNameType"/>
	<xs:element name="PSAs">
		<xs:annotation>
			<xs:appinfo>xmlsvcs.validation.EcAmXvuPSAValidator</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<!-- 
				     The container should dictate the cardinality, but PSA is a special case we need to set the minOccurs to 0
				     handle removing invalid PSA for granule metadata validation.
				-->
				<xs:element ref="PSA" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="PSA">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="PSAName"/>
				<xs:element ref="PSAValue" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="PSAName">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="40"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="PSAValue">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="255"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="InputGranule">
		<xs:annotation>
			<xs:documentation>The logical pointer to the input granule.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="InputPointer" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="InputPointer">
		<xs:annotation>
			<xs:documentation>Data model logical reference to Input Granule.</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="255"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="BrowseGranuleId" type="GranuleURType">
		<xs:annotation>
			<xs:documentation>Browse granule unique ECS identifier.  Appears in the science BrowseProduct section.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="BrowseDescription">
		<xs:annotation>
			<xs:documentation>The description of the Browse granule.</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="255"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<!-- 7.21 change - similar to the EMPTY defintion in DTD-->
	<!-- Indicates a granule with global coverage -->
	<xs:element name="Global"/>
</xs:schema>
