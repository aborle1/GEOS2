#! /bin/ksh
##############################################################################
#                                                                            #
# Name        : EcTkHDFMkcfg                                                 #
# Note        : This script is used to "configure" the HDF package delivered #
#               with the Toolkit.  The HDF package consists of a series of   #
#               libraries, binary utilities and include files.  No config    #
#               files are needed and none are generated by this script.      #
#               "Configuring" the HDF installation means (in this context)   #
#               deleting files not needed for the architecture for which the #
#               installation is being done and creating some useful links.   #
# Author      : Guru Tej S. Khalsa                                           #
# Description : Configures HDF installation                                  #
# Date        : Mar 23, 1998                                                 #
#                                                                            #
# Date       Who              What                                           #
# ----       ---------        --------------------                           #
# 03/23/1998 G. Khalsa        Initial version                                #
# 04/09/1998 Robert Magill    Add scriptlib function call to set_environment #
# 09/30/1998 Megan D Spencer  Updated to check for link existence            #
#                             during mkcfg for NCR#ECSed15960                #
# 09/07/1999 Damian Anderson  NCR ECSed20704: Return success/failure status. #
# 04/22/2000 Yangling Huang   NCR ECSed22680                                 #
# 14/11/2000 Yangling Huang   NCR ECSed28955                                 # 
# 05/14/2002 Adura Adekunjo   changed hdf5-1.4.1 to hdf5-1.4.3               #
# 02/24/2003 Adura Adekunjo   changed hdf5-1.4.3 to hdf5-1.4.4               #
##############################################################################

# Export all variables
set -o allexport

# Check that at least one argument was passed in
[ $# -eq 0 ] && print "Usage: $0 MODE" && exit 1

# The first argument passed in is the MODE
MODE=$1
eval $(EcCoScriptlib set_environment $MODE)

# Make sure needed variables are set
[ -z "$ECS_HOME"	] && NOTSET="$NOTSET ECS_HOME"

[ ! -z "$NOTSET" ] && {
	print "Re-run after setting the following environment variables:
$NOTSET"
	exit 1
}

# The sub-system is the SDP Toolkit (TOOLKIT)
SUBSYS=TOOLKIT

# Define the CUSTOM environment variable
CUSTOM=${ECS_HOME}/${MODE}/CUSTOM

EcCoScriptlib check_dirs $CUSTOM || exit 1

COMPONENT=EcTk

# Read in the variables set up in the .cfgparms files
eval $(EcCoScriptlib set_cfgparms $MODE $SUBSYS $COMPONENT $(basename $0))

#########################
#  T E J                #
#########################

# Check the value of the variable UseOldInstallMethod.

# Historically the HDF package has been installed under the sub-directory
# HDF41 at the DAACs.  Under this directory is the $BRAND directory and
# finally under this is the directory HDF4.1r3.  This last directory is
# redundant with the initial directory.  A (perhaps) more rational approach
# is to use a top level directory called HDF.  This script will do this
# unless the variable UseOldInstallMethod has been set to "True".
# As for HDF4 the HDF5 will be under hdf5-1.4.4

# The directory hierarchy looks as follows:
#
# ${CUSTOM}/HDF/${BRAND}/HDF4.1r4
#               ${BRAND}_debug/HDF4.1r4
# ${CUSTOM}/HDF/${BRAND}/hdf5-1.4.4
#               ${BRAND}_debug/hdf5-1.4.4
#
# The "old" directory hierarchy looks as follows:
#
# ${CUSTOM}/HDF41/${BRAND}/HDF4.1r4
# ${CUSTOM}/HDF41/${BRAND}/hdf5-1.4.4
#
# Note: Current versions of HDF4 and HDF5 are HDF4.2r1 and hdf5-1.6.5
#
old_install=0
typeset -u UseOldInstallMethod
case "$UseOldInstallMethod" in
    "TRUE")
	old_install=1
	;;
esac


# Check the value of the variable InstallSgiLibs

# If InstallSgiLibs is set to "False" then the various sgi versions of the
# HDF package will be deleted during the "configuration".

install_sgi=1
typeset -u InstallSgiLibs
case "$InstallSgiLibs" in
    "FALSE")
	install_sgi=0
	;;
esac

# Check the value of the variable InstallSunLib

# If InstallSunLib is set to "False" then sun5 version of the HDF package
# will be deleted during the "configuration".

install_sun5=1
typeset -u InstallSunLib
case "$InstallSunLib" in
    "FALSE")
	install_sun5=0
	;;
esac

# Check the value of the variable InstallOptLibs

# If InstallOptLibs is set to "False" then the various optimized versions
# of the HDF package (those HDF libraries (of any architecture) built with
# compiler optimized objects) will be deleted during the "configuration".

install_opt=1
typeset -u InstallOptimizedLibs
case "$InstallOptimizedLibs" in
    "FALSE")
	install_opt=0
	;;
esac

# Check the value of the variable InstallDebugLibs

# If InstallDebugLibs is set to "False" then the various debug versions of the
# HDF package (those HDF libraries (of any architecture) built with source code
# debuggable objects) will be deleted during the "configuration".

install_dbug=1
typeset -u InstallDebugLibs
case "$InstallDebugLibs" in
    "FALSE")
	install_dbug=0
	;;
esac

# The HDF package is installed in ${ECS_HOME}/<MODE>/CUSTOM which should be
# the definition of ${CUSTOM}.  Change to this directory to begin the
# "configuration" process.

# Note that by default the HDF package is delivered for multiple
# architectures so "configuration" here mostly means deleting what is not
# wanted from the initial installation.

cd $CUSTOM

# If the "old" installtion method is required create a soft link to the
# actual installation directory (HDF) with the name of the old installation
# directory (HDF41)

if [ $old_install = 1 -a ! -d HDF41 ] ; then
    echo creating link to mimic '"old style"' installation...
    ln -s HDF HDF41
fi

# If the sgi version of the HDF package have been slated for deletion then
# remove all sgi directories and their contents.

cd $CUSTOM/HDF
if [ $install_sgi = 0 ] ; then
    echo deleting SGI directories...
    rm -rf sgi*
fi


# If the sun5 versions of the HDF package have been slated for deletion
# then remove all sun5 directories and their contents.

if [ $install_sun5 = 0 ] ; then
   rm -rf sun5*
fi

# If the debug versions of the HDF package have been slated for deletion
# then remove all debug directories and their contents (note: debug
# directories are denoted by appending a "_debug" to the architecture name,
# e.g.: sun5_debug).

if [ $install_dbug = 0 ] ; then
    echo deleting debug HDF directories...
    rm -rf *_debug > /dev/null 2>&1
fi

# If the optimized versions of the HDF package have been slated for
# deletion then remove all optimized directories and their contents (note:
# optimized directories are simply the architecture type directories,
# e.g. sun5).

# Note that in this version of the script we explicitly remove the sgi
# flavors.  This should be enhanced if more architecture types are
# delivered, or better yet, be made more generic.

if [ $install_opt = 0 ] ; then
    echo deleting optimized HDF directories...
    rm -rf sgi32 sgi64 > /dev/null 2>&1
fi

return 0
